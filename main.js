(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var i=t.g.document;if(!e&&i&&(i.currentScript&&"SCRIPT"===i.currentScript.tagName.toUpperCase()&&(e=i.currentScript.src),!e)){var n=i.getElementsByTagName("script");if(n.length)for(var s=n.length-1;s>-1&&(!e||!/^http(s?):/.test(e));)e=n[s--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=async({url:t,method:e,data:i})=>{const n={method:e,headers:{"Content-Type":"application/json"}};i&&(n.body=JSON.stringify(i));const s=await fetch(t,n);return s.ok||console.error(`HTTP error! status: ${s.status}`),204===s.status?null:await s.json()},i=t.p+"3a52f5f8e063e897ac05.png",n=t.p+"f925a9d5b24cf0424acf.png",s=t.p+"03adc3e7d166ee470965.png";new class{constructor(t,e,i,n,s){if(!(t instanceof HTMLElement))throw new Error("This is not an HTML element!");this.container=t,this.ticketService=e,this.tickets=[],this.ticketView=i,this.ticketForm=n,this.TicketConfirm=s}init(){this.render(),this.loadTickets(),this.addEventListeners()}loadTickets(){this.ticketService.list((t=>{this.tickets=t,this.renderTickets()}))}renderTickets(){const t=this.container.querySelector(".tickets");t.innerHTML="",this.tickets.forEach((e=>{const i=this.ticketView.render(e);t.appendChild(i),this.addTicketEventListeners(i,e)}))}render(){this.container.innerHTML='\n      <div class="helpdesk">\n        <div class="header-bar">\n          <div class="dots">\n            <span class="dot"></span>\n            <span class="dot"></span>\n            <span class="dot"></span>\n          </div>\n        </div>\n        <button class="add-ticket-btn">Добавить тикет</button>\n        <div class="tickets"></div>\n      </div>\n    '}addEventListeners(){this.container.querySelector(".add-ticket-btn").addEventListener("click",(()=>{this.ticketForm.show(null,(t=>this.createTicket(t)))}))}addTicketEventListeners(t,e){t.querySelector(".edit-btn").addEventListener("click",(()=>{this.ticketForm.show(e,(t=>this.updateTicket(e.id,t)))})),t.querySelector(".delete-btn").addEventListener("click",(()=>{this.deleteTicket(e.id)})),t.querySelector(".done-btn").addEventListener("click",(()=>{this.updateTicket(e.id,{status:!e.status})}))}createTicket(t){this.ticketService.create(t,(t=>{this.tickets.push(t),this.loadTickets()}))}updateTicket(t,e){this.ticketService.update(t,e,(()=>{this.loadTickets()}))}deleteTicket(t){this.TicketConfirm.show((()=>{this.ticketService.delete(t,(()=>{this.loadTickets()}))}))}}(document.getElementById("root"),new class{constructor(t){this.baseUrl=t}list(t){const i=`${this.baseUrl}?method=allTickets`;e({url:i,method:"GET"}).then(t)}get(t,i){const n=`${this.baseUrl}?method=ticketById&id=${t}`;e({url:n,method:"GET"}).then(i)}create(t,i){const n=`${this.baseUrl}?method=createTicket`;e({url:n,method:"POST",data:t}).then(i)}update(t,i,n){const s=`${this.baseUrl}?method=updateById&id=${t}`;e({url:s,method:"PUT",data:i}).then(n)}delete(t,i){const n=`${this.baseUrl}?method=deleteById&id=${t}`;e({url:n,method:"DELETE"}).then((()=>i()))}}("http://localhost:7070"),new class{render(t){const e=document.createElement("div");return e.className="ticket",e.dataset.id=t.id,e.innerHTML=`\n      <div class="ticket-content">\n        <div class="ticket-header">\n          <div class="ticket-status">\n            ${this.createButton("done-btn",t.status?i:"")}\n          </div>\n          <span class="ticket-title">${t.name}</span>\n          <span class="ticket-date">${this.formatDate(t.created)}</span>\n          <div class="ticket-actions">\n            ${this.createButton("edit-btn",n)}\n            ${this.createButton("delete-btn",s)}\n          </div>\n        </div>\n        <div class="ticket-description hidden">${t.description}</div>\n      </div>\n    `,this.addClickEvent(e),e}createButton(t,e){return`\n      <div class="ticket-btn ${t}">\n        ${e?`<img src="${e}" />`:""}\n      </div>\n    `}formatDate(t){const e=new Date(t);return new Intl.DateTimeFormat("ru-RU",{year:"2-digit",month:"numeric",day:"numeric",hour:"2-digit",minute:"2-digit"}).format(e).replace(",","")}addClickEvent(t){t.addEventListener("click",(e=>{e.target.closest(".ticket-btn")||t.querySelector(".ticket-description").classList.toggle("hidden")}))}},new class{constructor(){this.modal=null,this.onSubmit=null}show(t=null,e){this.ticket=t,this.onSubmit=e,this.render()}render(){this.close();const t=document.createElement("div");t.className="modal-overlay",t.innerHTML=`\n      <div class="modal">\n        <div class="modal-header">\n          <h3>${this.ticket?"Изменить тикет":"Добавить тикет"}</h3>\n        </div>\n        <div class="modal-body">\n          <label>\n            Краткое описание\n            <input type="text" class="short-description" value="${this.ticket?this.ticket.name:""}" required>\n          </label>\n          <label>\n            Подробное описание\n            <textarea class="full-description">${this.ticket?this.ticket.description:""}</textarea>\n          </label>\n        </div>\n        <div class="modal-footer">\n          <button class="cancel-btn">Отмена</button>\n          <button class="save-btn">Ок</button>\n        </div>\n      </div>\n    `,this.modal=t,document.querySelector(".helpdesk").appendChild(t),this.addModalEventListeners()}addModalEventListeners(){this.modal.querySelector(".cancel-btn").addEventListener("click",(()=>this.close())),this.modal.querySelector(".save-btn").addEventListener("click",(()=>this.handleSubmit()))}handleSubmit(){const t=this.modal.querySelector(".short-description").value.trim(),e=this.modal.querySelector(".full-description").value.trim();t?(this.onSubmit({name:t,description:e}),this.onSubmit=null,this.close()):alert("Краткое описание обязательно!")}close(){document.querySelector(".modal-overlay")?.remove(),this.modal=null}},new class{constructor(){this.modal=null,this.onConfirm=null}show(t){this.onConfirm=t,this.render()}render(){this.close();const t=document.createElement("div");t.className="modal-overlay",t.innerHTML='\n      <div class="modal">\n        <div class="modal-header">\n          <h3>Удалить тикет</h3>\n        </div>\n        <div class="modal-body">\n          <p>Вы уверены, что хотите удалить этот тикет? Это действие необратимо.</p>\n        </div>\n        <div class="modal-footer">\n          <button class="cancel-btn">Отмена</button>\n          <button class="ok-btn">Ok</button>\n        </div>\n      </div>\n    ',this.modal=t,document.querySelector(".helpdesk").appendChild(t),this.addModalEventListeners()}addModalEventListeners(){this.modal.querySelector(".cancel-btn").addEventListener("click",(()=>this.close())),this.modal.querySelector(".ok-btn").addEventListener("click",(()=>{this.onConfirm(),this.onConfirm=null,this.close()}))}close(){document.querySelector(".modal-overlay")?.remove(),this.modal=null}}).init()})();
//# sourceMappingURL=main.js.map